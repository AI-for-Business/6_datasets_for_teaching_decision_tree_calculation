General information:
	|S| = 25
	remaining columns: ['do sports', 'weight', 'stress level', 'age', 'diet', 'risk for heart attack']
Entropy(S) = (17/25) * log_2(17/25) + (8/25) * log_2(8/25) = 0.904
information gain calculation:
	do sports:
		Entropy(S_regularly) = (5/7) * log_2(5/7) + (2/7) * log_2(2/7) = 0.863
		Entropy(S_irregularly) = (3/6) * log_2(3/6) + (3/6) * log_2(3/6) = 1.0
		Entropy(S_not at all) = (9/12) * log_2(9/12) + (3/12) * log_2(3/12) = 0.811
		Gain(S,do sports) = (7/25) * Entropy(S_regularly) + (6/25) * Entropy(S_irregularly) + (12/25) * Entropy(S_not at all) = 0.033
	weight:
		Entropy(S_normal weight) = (8/13) * log_2(8/13) + (5/13) * log_2(5/13) = 0.961
		Entropy(S_overweight) = (7/10) * log_2(7/10) + (3/10) * log_2(3/10) = 0.881
		Entropy(S_underweight) = (2/2) * log_2(2/2) = 0.0
		Gain(S,weight) = (13/25) * Entropy(S_normal weight) + (10/25) * Entropy(S_overweight) + (2/25) * Entropy(S_underweight) = 0.052
	stress level:
		Entropy(S_high) = (7/10) * log_2(7/10) + (3/10) * log_2(3/10) = 0.881
		Entropy(S_medium) = (9/10) * log_2(9/10) + (1/10) * log_2(1/10) = 0.469
		Entropy(S_low) = (5/5) * log_2(5/5) = 0.0
		Gain(S,stress level) = (10/25) * Entropy(S_high) + (10/25) * Entropy(S_medium) + (5/25) * Entropy(S_low) = 0.364
	age:
		Entropy(S_30-50) = (5/9) * log_2(5/9) + (4/9) * log_2(4/9) = 0.991
		Entropy(S_<30) = (7/10) * log_2(7/10) + (3/10) * log_2(3/10) = 0.881
		Entropy(S_>50) = (5/6) * log_2(5/6) + (1/6) * log_2(1/6) = 0.65
		Gain(S,age) = (9/25) * Entropy(S_30-50) + (10/25) * Entropy(S_<30) + (6/25) * Entropy(S_>50) = 0.039
	diet:
		Entropy(S_unhealthy) = (6/9) * log_2(6/9) + (3/9) * log_2(3/9) = 0.918
		Entropy(S_healthy) = (9/10) * log_2(9/10) + (1/10) * log_2(1/10) = 0.469
		Entropy(S_neutral) = (5/6) * log_2(5/6) + (1/6) * log_2(1/6) = 0.65
		Gain(S,diet) = (9/25) * Entropy(S_unhealthy) + (10/25) * Entropy(S_healthy) + (6/25) * Entropy(S_neutral) = 0.23
max{Gain(S,do sports), Gain(S,weight), Gain(S,stress level), Gain(S,age), Gain(S,diet)} = Gain(S,stress level) --> split at stress level


root = diet
General information:
	|S| = 10
	remaining columns: ['do sports', 'weight', 'age', 'diet', 'risk for heart attack']
Entropy(S) = (7/10) * log_2(7/10) + (3/10) * log_2(3/10) = 0.881
information gain calculation:
	do sports:
		Entropy(S_regularly) = (2/3) * log_2(2/3) + (1/3) * log_2(1/3) = 0.918
		Entropy(S_irregularly) = (3/4) * log_2(3/4) + (1/4) * log_2(1/4) = 0.811
		Entropy(S_not at all) = (2/3) * log_2(2/3) + (1/3) * log_2(1/3) = 0.918
		Gain(S,do sports) = (3/10) * Entropy(S_regularly) + (4/10) * Entropy(S_irregularly) + (3/10) * Entropy(S_not at all) = 0.006
	weight:
		Entropy(S_normal weight) = (5/7) * log_2(5/7) + (2/7) * log_2(2/7) = 0.863
		Entropy(S_overweight) = (2/3) * log_2(2/3) + (1/3) * log_2(1/3) = 0.918
		Gain(S,weight) = (7/10) * Entropy(S_normal weight) + (3/10) * Entropy(S_overweight) = 0.002
	age:
		Entropy(S_30-50) = (4/5) * log_2(4/5) + (1/5) * log_2(1/5) = 0.722
		Entropy(S_<30) = (3/4) * log_2(3/4) + (1/4) * log_2(1/4) = 0.811
		Entropy(S_>50) = (1/1) * log_2(1/1) = 0.0
		Gain(S,age) = (5/10) * Entropy(S_30-50) + (4/10) * Entropy(S_<30) + (1/10) * Entropy(S_>50) = 0.196
	diet:
		Entropy(S_unhealthy) = (5/5) * log_2(5/5) = 0.0
		Entropy(S_healthy) = (2/3) * log_2(2/3) + (1/3) * log_2(1/3) = 0.918
		Entropy(S_neutral) = (1/2) * log_2(1/2) + (1/2) * log_2(1/2) = 1.0
		Gain(S,diet) = (5/10) * Entropy(S_unhealthy) + (3/10) * Entropy(S_healthy) + (2/10) * Entropy(S_neutral) = 0.406
max{Gain(S,do sports), Gain(S,weight), Gain(S,age), Gain(S,diet)} = Gain(S,diet) --> split at diet


root = do sports
General information:
	|S| = 3
	remaining columns: ['do sports', 'weight', 'age', 'risk for heart attack']
Entropy(S) = (2/3) * log_2(2/3) + (1/3) * log_2(1/3) = 0.918
information gain calculation:
	do sports:
		Entropy(S_not at all) = (1/2) * log_2(1/2) + (1/2) * log_2(1/2) = 1.0
		Entropy(S_irregularly) = (1/1) * log_2(1/1) = 0.0
		Gain(S,do sports) = (2/3) * Entropy(S_not at all) + (1/3) * Entropy(S_irregularly) = 0.252
	weight:
		Entropy(S_normal weight) = (1/2) * log_2(1/2) + (1/2) * log_2(1/2) = 1.0
		Entropy(S_overweight) = (1/1) * log_2(1/1) = 0.0
		Gain(S,weight) = (2/3) * Entropy(S_normal weight) + (1/3) * Entropy(S_overweight) = 0.252
	age:
		Entropy(S_>50) = (1/1) * log_2(1/1) = 0.0
		Entropy(S_30-50) = (1/2) * log_2(1/2) + (1/2) * log_2(1/2) = 1.0
		Gain(S,age) = (1/3) * Entropy(S_>50) + (2/3) * Entropy(S_30-50) = 0.252
max{Gain(S,do sports), Gain(S,weight), Gain(S,age)} = Gain(S,do sports) --> split at do sports


root = age
General information:
	|S| = 2
	remaining columns: ['weight', 'age', 'risk for heart attack']
Entropy(S) = (1/2) * log_2(1/2) + (1/2) * log_2(1/2) = 1.0
information gain calculation:
	weight:
		Entropy(S_normal weight) = (1/2) * log_2(1/2) + (1/2) * log_2(1/2) = 1.0
		Gain(S,weight) = (2/2) * Entropy(S_normal weight) = 0.0
	age:
		Entropy(S_>50) = (1/1) * log_2(1/1) = 0.0
		Entropy(S_30-50) = (1/1) * log_2(1/1) = 0.0
		Gain(S,age) = (1/2) * Entropy(S_>50) + (1/2) * Entropy(S_30-50) = 1.0
max{Gain(S,weight), Gain(S,age)} = Gain(S,age) --> split at age


root = do sports
General information:
	|S| = 2
	remaining columns: ['do sports', 'weight', 'age', 'risk for heart attack']
Entropy(S) = (1/2) * log_2(1/2) + (1/2) * log_2(1/2) = 1.0
information gain calculation:
	do sports:
		Entropy(S_regularly) = (1/1) * log_2(1/1) = 0.0
		Entropy(S_irregularly) = (1/1) * log_2(1/1) = 0.0
		Gain(S,do sports) = (1/2) * Entropy(S_regularly) + (1/2) * Entropy(S_irregularly) = 1.0
	weight:
		Entropy(S_normal weight) = (1/2) * log_2(1/2) + (1/2) * log_2(1/2) = 1.0
		Gain(S,weight) = (2/2) * Entropy(S_normal weight) = 0.0
	age:
		Entropy(S_<30) = (1/1) * log_2(1/1) = 0.0
		Entropy(S_30-50) = (1/1) * log_2(1/1) = 0.0
		Gain(S,age) = (1/2) * Entropy(S_<30) + (1/2) * Entropy(S_30-50) = 1.0
max{Gain(S,do sports), Gain(S,weight), Gain(S,age)} = Gain(S,do sports) --> split at do sports


root = age
General information:
	|S| = 10
	remaining columns: ['do sports', 'weight', 'age', 'diet', 'risk for heart attack']
Entropy(S) = (9/10) * log_2(9/10) + (1/10) * log_2(1/10) = 0.469
information gain calculation:
	do sports:
		Entropy(S_regularly) = (2/2) * log_2(2/2) = 0.0
		Entropy(S_irregularly) = (1/1) * log_2(1/1) = 0.0
		Entropy(S_not at all) = (6/7) * log_2(6/7) + (1/7) * log_2(1/7) = 0.592
		Gain(S,do sports) = (2/10) * Entropy(S_regularly) + (1/10) * Entropy(S_irregularly) + (7/10) * Entropy(S_not at all) = 0.055
	weight:
		Entropy(S_overweight) = (4/5) * log_2(4/5) + (1/5) * log_2(1/5) = 0.722
		Entropy(S_underweight) = (2/2) * log_2(2/2) = 0.0
		Entropy(S_normal weight) = (3/3) * log_2(3/3) = 0.0
		Gain(S,weight) = (5/10) * Entropy(S_overweight) + (2/10) * Entropy(S_underweight) + (3/10) * Entropy(S_normal weight) = 0.108
	age:
		Entropy(S_>50) = (1/2) * log_2(1/2) + (1/2) * log_2(1/2) = 1.0
		Entropy(S_30-50) = (4/4) * log_2(4/4) = 0.0
		Entropy(S_<30) = (4/4) * log_2(4/4) = 0.0
		Gain(S,age) = (2/10) * Entropy(S_>50) + (4/10) * Entropy(S_30-50) + (4/10) * Entropy(S_<30) = 0.269
	diet:
		Entropy(S_healthy) = (4/4) * log_2(4/4) = 0.0
		Entropy(S_unhealthy) = (3/4) * log_2(3/4) + (1/4) * log_2(1/4) = 0.811
		Entropy(S_neutral) = (2/2) * log_2(2/2) = 0.0
		Gain(S,diet) = (4/10) * Entropy(S_healthy) + (4/10) * Entropy(S_unhealthy) + (2/10) * Entropy(S_neutral) = 0.144
max{Gain(S,do sports), Gain(S,weight), Gain(S,age), Gain(S,diet)} = Gain(S,age) --> split at age


root = do sports
General information:
	|S| = 2
	remaining columns: ['do sports', 'weight', 'diet', 'risk for heart attack']
Entropy(S) = (1/2) * log_2(1/2) + (1/2) * log_2(1/2) = 1.0
information gain calculation:
	do sports:
		Entropy(S_regularly) = (1/1) * log_2(1/1) = 0.0
		Entropy(S_not at all) = (1/1) * log_2(1/1) = 0.0
		Gain(S,do sports) = (1/2) * Entropy(S_regularly) + (1/2) * Entropy(S_not at all) = 1.0
	weight:
		Entropy(S_overweight) = (1/2) * log_2(1/2) + (1/2) * log_2(1/2) = 1.0
		Gain(S,weight) = (2/2) * Entropy(S_overweight) = 0.0
	diet:
		Entropy(S_healthy) = (1/1) * log_2(1/1) = 0.0
		Entropy(S_unhealthy) = (1/1) * log_2(1/1) = 0.0
		Gain(S,diet) = (1/2) * Entropy(S_healthy) + (1/2) * Entropy(S_unhealthy) = 1.0
max{Gain(S,do sports), Gain(S,weight), Gain(S,diet)} = Gain(S,do sports) --> split at do sports
